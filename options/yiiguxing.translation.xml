<application>
  <component name="AppStorage">
    <histories>
      <item value="The default initial capacity - MUST be a power of two." />
      <item value="divided by" />
      <item value="divided" />
      <item value="If the initial capacity is greater than the * maximum number of entries divided by the load factor, no rehash * operations will ever occur." />
      <item value="Higher values decrease the * space overhead" />
      <item value="rehashed" />
      <item value="Iteration over * collection views requires time proportional to the &quot;capacity&quot; of the * &lt;tt&gt;HashMap&lt;/tt&gt; instance (the number of buckets) plus its size (the number * of key-value mappings)." />
      <item value="Thus, it's very important not to set the initial * capacity too high (or the load factor too low) if iteration performance is * important." />
      <item value="it does not guarantee that the order * will remain constant over time." />
      <item value="in particular," />
      <item value="guarantees" />
      <item value="permits" />
      <item value="roughly" />
      <item value="Attempts to allocate larger arrays may result in * OutOfMemoryError: Requested array size exceeds VM limit */" />
      <item value="Some VMs reserve some header words in an array." />
      <item value="The maximum size of array to allocate." />
      <item value="the desired minimum capacity" />
      <item value="ensure Capacity Internal" />
      <item value="ensure Explicit Capacity" />
      <item value="&lt;p&gt;The &lt;tt&gt;size&lt;/tt&gt;, &lt;tt&gt;isEmpty&lt;/tt&gt;, &lt;tt&gt;get&lt;/tt&gt;, &lt;tt&gt;set&lt;/tt&gt;, * &lt;tt&gt;iterator&lt;/tt&gt;, and &lt;tt&gt;listIterator&lt;/tt&gt; operations run in constant * time. The &lt;tt&gt;add&lt;/tt&gt; operation runs in &lt;i&gt;amortized constant time&lt;/i&gt;, * that is, adding n elements requires O(n) time. All of the other operations * run in linear time (roughly speaking). The constant factor is low compared * to that for the &lt;tt&gt;LinkedList&lt;/tt&gt; implementation" />
      <item value="The constant factor is low compared * to that for the &lt;tt&gt;LinkedList&lt;/tt&gt; implementation" />
      <item value="constant" />
      <item value="manipulate" />
      <item value="Resizable" />
      <item value="array" />
      <item value="Shared empty array instance used for empty instances. */" />
      <item value="延迟" />
      <item value="scope" />
      <item value="Capacity" />
      <item value="inflate" />
      <item value="appropriate" />
      <item value="entry" />
      <item value="associated" />
      <item value="specified" />
      <item value="interface" />
      <item value="superclass" />
      <item value="Typical usage is registering all bean definitions first (possibly read * from a bean definition file), before accessing beans. Bean definition lookup * is therefore an inexpensive operation in a local bean definition table, * operating on pre-built bean definition metadata objects." />
      <item value="usage" />
      <item value="fledged" />
      <item value="interfaces" />
      <item value="Default Listable Bean Factory" />
    </histories>
  </component>
</application>